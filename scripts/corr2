#!/usr/bin/env python
# Copyright (c) 2003-2014 by Mike Jarvis
#
# TreeCorr is free software: redistribution and use in source and binary forms,
# with or without modification, are permitted provided that the following
# conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions, and the disclaimer given in the accompanying LICENSE
#    file.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions, and the disclaimer given in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the {organization} nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.


import sys
import treecorr

def parse_args():
    """Handle the command line arguments
    """
    import argparse

    version_str = "TreeCorr version %s"%treecorr.version
    description = "Efficient code for computing 2-point correlation functions.\n"
    description += "See https://github.com/rmjarvis/TreeCorr for documentation."

    parser = argparse.ArgumentParser(description=description, add_help=True, epilog=version_str)
    parser.add_argument(
        'config_file', type=str, nargs='?',
        help='the configuration file')
    parser.add_argument(
        'variables', type=str, nargs='*',
        help='additional variables or modifications to variables in the config file. ' +
        'e.g. `corr2 g2.params g2_file_name=run03.out`')
    parser.add_argument(
        '-v', '--verbosity', type=int, action='store', default=2, choices=(0, 1, 2),
        help='integer verbosity level: min=0, max=3 [default=1]')
    parser.add_argument(
        '-l', '--log_file', type=str, action='store', default=None,
        help='filename for storing logging output [default is to stream to stdout]')
    parser.add_argument(
        '--version', action='store_const', default=False, const=True,
        help='show the version of TreeCorr')

    args = parser.parse_args()

    if args.config_file == None:
        if args.version:
            print version_str
        else:
            parser.print_help()
        sys.exit()
    elif args.version:
        print version_str

    return args


def main():
    args = parse_args()

    # Parse the integer verbosity level from the command line args into a logging_level string
    import logging
    logging_levels = {  0: logging.CRITICAL,
                        1: logging.WARNING,
                        2: logging.INFO,
                        3: logging.DEBUG }
    logging_level = logging_levels[args.verbosity]

    # Setup logging to go to sys.stdout or (if requested) to an output file
    if args.log_file is None:
        logging.basicConfig(format="%(message)s", level=logging_level, stream=sys.stdout)
    else:
        logging.basicConfig(format="%(message)s", level=logging_level, filename=args.log_file)
    logger = logging.getLogger('treecorr')


    config = treecorr.config.read_config(args.config_file)
    logger.debug('Successfully read config file %s'%args.config_file)

    # Add the additional variables to the config file
    for v in args.variables:
        logger.debug('Parsing additional variable: %s',v)
        treecorr.config.parse_variable(config, v)

    import pprint
    print 'config = '
    pprint.pprint(config)

if __name__ == '__main__':
    main()

